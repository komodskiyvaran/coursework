1) Какой метод запускает программу на Java?
a) Любой, его можно задавать в настройках проекта
b) Метод main +
c) Запуск программы происходит через компиляцию проекта, основного метода нет
d) Запуск осуществляет корень проекта src
2) Что такое класс в Java?
a) Все операторы делятся на классы.
b) Базовый элемент ООП в языке Java. +
c) Просто одно из возможных названий переменной.
d) Такое понятие есть только в C++, в Java такого понятия нет.
3) Что вернет метод, объявленный следующим образом:   — public static int getAmount()
a) Не ясно, надо смотреть код метода.
b) Вернет static-поле класса.
c) Вернет ссылку на объект класса this.
d) Вернет целочисленное значение. +
4) Для чего можно использовать Java?
a) Для создания программ для ПК
b) Для создания игр
c) Для разработки приложений
d) Для всего перечисленного +
5) Как объявить класс в коде?
a) class MyClass {} +
b) select * from class MyClass {}
c) new class MyClass {}
d) MyClass extends class {}
6) Для чего используется оператор NEW?
a) Для создания новой переменной.
b) Для объявления нового класса.
c) Для создания экземпляра класса. +
d) Это антагонист оператора OLD.
7) Как правильно объявить массив?
a) int a = new int[] {1, 2, 3, 4, 5};
b) int[] a = new int[] {1, 2, 3, 4, 5}; +
c) int[] a = int[] {1, 2, 3, 4, 5};
d) int[] a = new int {1, 2, 3, 4, 5};
8) Что означает ключевое слово extends?
a) Что данный класс наследуется от другого. +
b) Что это дополнительный модуль класса, который расширяет его свойства.
c) Что два класса делают одно и то же.
d) Что это самый большой класс в программе.
9) Какое утверждение относительно java.util.Random корректно:
a) void nextBytes(byte[] arr)— заполняет массив arr нулями
b) Запуск приложения, генерирующего последовательность псевдослучайных чисел, — не возвращает одинаковых последовательностей
c) Используется для получения последовательности псевдослучайных чисел +
d) Нет верного варианта ответа
10) Как вызвать static-метод внутри обычного?
a) Никак, static-метод можно вызвать только от объекта класса.
b) Можно, надо перед этим перегрузить обычный метод класса.
c) Можно, надо перед этим переопределить обычный метод класса.
d) Можно, ничего дополнительно делать не надо. +
11) Как вызвать обычный метод класса внутри static-метода?
a) Никак, static-метод не работает с объектом класса.  +
b) Можно, надо перед этим перегрузить обычный метод класса.
c) Можно, надо перед этим переопределить обычный метод класса.
d) Можно, ничего дополнительно делать не надо.
12) Чем отличаются static-метод класса от обычного метода класса.
a) Поведение обычного метода класса можно изменить в классе-наследнике, а поведение  —static-метода нельзя.
b) Обычный метод класса можно переопределить, а static-метод нельзя.
c) Обычный метод класса работает от объекта класса, а static-метод от всего класса.  +
d) Static-метод класса можно вызывать только внутри класса, а обычный - в любой части кода.
13) Сколько объектов порождается при инициализации массива new int[3][]:
a) 1 +
b) 0
c) 3
d) 4
14) Какое утверждение относительно класса String верно:
a) Является абстрактным
b) Содержит только статические методы
c) Является абстрактным и содержит статические методы
d) Обладает свойством неизменяемости +
15) Для чего необходимо ключевое слово this
a) Это указатель на переопределенный метод класса. Его нельзя опускать при вызове,  — иначе переопределение не сработает.
b) Это указатель на текущий объект класса внутри самого класса. Его можно опускать — при вызове метода класса, но лучше этого не делать. +
c) Это не ключевое слово.
d) Это ключевое слово для вызова обычного метода внутри static-метода. Его нельзя опускать, — иначе вызов не сработает и будет ошибка.
16) Что означает перегрузка метода в Java (overload).
a) Изменение поведения метода класса относительно родительского.
b) Изменение поведения метода класса относительно дочернего.
c) Несколько методов с одинаковым названием, но разным набором параметров. +
d) Несколько разных классов с одинаковым методом.
17) Каким методом можно перевернуть строку?
a) string.reverse();
b) stringBuilder.reverse(); +
c) string.return();
d) string.invert();
18) Вы создали класс Animal в пакете ru.animal.  —Где будет хранится исходный код класса в файловой системе:
a) ru\animal\Animal.class
b) ru\Animal.java
c) ru\animal\Animal.java +
d) ru\animal\main.java
19) Может ли массив основываться на абстрактных классах? Интерфейсах:
a) Да, нет
b) Да, да +
c) Нет, да
d) Нет, нет
20) Что означает переопределение метода в Java (override).
a) Изменение поведения метода класса относительно родительского. +
b) Изменение поведения метода класса относительно дочернего.
c) Несколько методов с одинаковым названием, но разным набором параметров.
d) Несколько разных классов с одинаковым методом.
21) Какое преимущество предоставляет интерфейс Runnable — по сравнению с классом Thread:
a) Позволяет более гибко работать с приоритетами потоков
b) Позволяет классу, содержащему логику работы, наследоваться от других классов +
c) Позволяет обойтись без класса Thread
d) Нет преимуществ
22) Какая кодировка используется классом OutputStreamWriter по умолчанию?
a) UTF-8 независимо от системы, где запущена Java-машина
b) UTF-16 независимо от системы, где запущена Java-машина
c) US-ASCII независимо от системы, где запущена Java-машина
d) используемая кодировка зависит от системы, где запущена Java-машина +
23) От какого класса наследуются InputStream и OutputStream:
a) AbstractStream
b) Object +
c) IOWriter
d) Stream
24) Что такое ООП?
a) Методология программирования, основанная на представлении программы в виде  —совокупности объектов +
b) Тип программирования, в котором используются понятия высокого уровня и в котором  —не работают напрямую с ячейками памяти ПК.
c) Очень одинокий программист
d) Методология, которая включает в себя наследование и полиморфизм
25) В чем разница между char и Character?
a) char является примитивным типом, а Character классом. +
b) нет разницы, они оба примитивные типы.
c) char является классом, а Character примитивным типом.
d) нет разницы, они оба классы.
26) Какой модификатор доступа не может видеть внешние классы из других  —пакетов, но может быть виден в этом же классе, в этом же пакете —и в классах наследниках?
a) public
b) private
c) default
d) protected +
27) Какой метод интерфейса Runnable должен быть реализован всеми  —потоками?
a) run() +
b) sleep()
c) stop()
d) start()
28) Что такое анонимный класс?
a) Класс, который невозможно наследовать
b) Класс без конструктора
c) Внутренний класс, который объявляется без указания имени класса +
d) Абстрактный класс
29) В каком пакете сосредоточен основной функционал работы с потоками?
a) java.io +
b) java.line
c) java.thread
d) java.stream
30) Как называется процесс сохранения состояния объекта в  —последовательность байт?
a) Байтизация
b) Десериализация
c) Сериализация +
d) Анонимизация